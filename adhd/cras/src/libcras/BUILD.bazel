# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("//dist:cras_rules_cc.bzl", "cras_shared_library")

cc_library(
    name = "cras_client",
    srcs = [
        "cras_client.c",
        "cras_helpers.c",
    ],
    linkopts = [
        "-lm",
        "-lrt",
    ],
    visibility = [
        "//cras/src/alsa_plugin:__pkg__",
        "//cras/src/benchmark:__pkg__",
        "//cras/src/tools:__pkg__",
    ],
    deps = [
        "//cras/include",
        "//cras/src/common:cras_config",
        "//cras/src/common:cras_file_wait",
        "//cras/src/common:cras_messages",
        "//cras/src/common:cras_observer_ops",
        "//cras/src/common:cras_selinux_helper",
        "//cras/src/common:cras_shm",
        "//cras/src/common:cras_string",
        "//cras/src/common:cras_types",
        "//cras/src/common:cras_util",
        "//cras/src/common:cras_version",
        "//third_party/utlist",
        "@pkg_config//alsa",
    ],
)

cras_shared_library(
    name = "cras",  # libcras.so
    roots = [":cras_client"],
    static_deps = [
        "@//:__subpackages__",
        # Despite that we list external deps in static_deps, they are linked
        # dynamically because pkg_config does not provide object files.
        "@pkg_config//alsa",
    ] + select({
        "//:selinux_build": ["@pkg_config//libselinux"],
        "//conditions:default": [],
    }),
    visibility = [
        "//cras/src/alsa_plugin:__pkg__",
        "//dist:__pkg__",
    ],
)

# Allow tests to not specify all headers.
cc_library(
    name = "all_headers",
    testonly = True,
    hdrs = glob(include = ["*.h"]),
    textual_hdrs = glob(include = ["*.c"]),  # Allow including sources
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

# Allow tests to use sources directly
exports_files(
    glob(include = [
        "*.c",
    ]),
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)
